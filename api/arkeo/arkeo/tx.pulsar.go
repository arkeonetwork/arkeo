// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package arkeo

import (
	_ "cosmossdk.io/api/amino"
	v1beta1 "cosmossdk.io/api/cosmos/base/v1beta1"
	_ "cosmossdk.io/api/cosmos/msg/v1"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_MsgBondProvider          protoreflect.MessageDescriptor
	fd_MsgBondProvider_creator  protoreflect.FieldDescriptor
	fd_MsgBondProvider_provider protoreflect.FieldDescriptor
	fd_MsgBondProvider_service  protoreflect.FieldDescriptor
	fd_MsgBondProvider_bond     protoreflect.FieldDescriptor
)

func init() {
	file_arkeo_arkeo_tx_proto_init()
	md_MsgBondProvider = File_arkeo_arkeo_tx_proto.Messages().ByName("MsgBondProvider")
	fd_MsgBondProvider_creator = md_MsgBondProvider.Fields().ByName("creator")
	fd_MsgBondProvider_provider = md_MsgBondProvider.Fields().ByName("provider")
	fd_MsgBondProvider_service = md_MsgBondProvider.Fields().ByName("service")
	fd_MsgBondProvider_bond = md_MsgBondProvider.Fields().ByName("bond")
}

var _ protoreflect.Message = (*fastReflection_MsgBondProvider)(nil)

type fastReflection_MsgBondProvider MsgBondProvider

func (x *MsgBondProvider) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgBondProvider)(x)
}

func (x *MsgBondProvider) slowProtoReflect() protoreflect.Message {
	mi := &file_arkeo_arkeo_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgBondProvider_messageType fastReflection_MsgBondProvider_messageType
var _ protoreflect.MessageType = fastReflection_MsgBondProvider_messageType{}

type fastReflection_MsgBondProvider_messageType struct{}

func (x fastReflection_MsgBondProvider_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgBondProvider)(nil)
}
func (x fastReflection_MsgBondProvider_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgBondProvider)
}
func (x fastReflection_MsgBondProvider_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgBondProvider
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgBondProvider) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgBondProvider
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgBondProvider) Type() protoreflect.MessageType {
	return _fastReflection_MsgBondProvider_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgBondProvider) New() protoreflect.Message {
	return new(fastReflection_MsgBondProvider)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgBondProvider) Interface() protoreflect.ProtoMessage {
	return (*MsgBondProvider)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgBondProvider) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgBondProvider_creator, value) {
			return
		}
	}
	if x.Provider != "" {
		value := protoreflect.ValueOfString(x.Provider)
		if !f(fd_MsgBondProvider_provider, value) {
			return
		}
	}
	if x.Service != "" {
		value := protoreflect.ValueOfString(x.Service)
		if !f(fd_MsgBondProvider_service, value) {
			return
		}
	}
	if x.Bond != "" {
		value := protoreflect.ValueOfString(x.Bond)
		if !f(fd_MsgBondProvider_bond, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgBondProvider) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgBondProvider.creator":
		return x.Creator != ""
	case "arkeo.arkeo.MsgBondProvider.provider":
		return x.Provider != ""
	case "arkeo.arkeo.MsgBondProvider.service":
		return x.Service != ""
	case "arkeo.arkeo.MsgBondProvider.bond":
		return x.Bond != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgBondProvider"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgBondProvider does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBondProvider) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgBondProvider.creator":
		x.Creator = ""
	case "arkeo.arkeo.MsgBondProvider.provider":
		x.Provider = ""
	case "arkeo.arkeo.MsgBondProvider.service":
		x.Service = ""
	case "arkeo.arkeo.MsgBondProvider.bond":
		x.Bond = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgBondProvider"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgBondProvider does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgBondProvider) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "arkeo.arkeo.MsgBondProvider.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "arkeo.arkeo.MsgBondProvider.provider":
		value := x.Provider
		return protoreflect.ValueOfString(value)
	case "arkeo.arkeo.MsgBondProvider.service":
		value := x.Service
		return protoreflect.ValueOfString(value)
	case "arkeo.arkeo.MsgBondProvider.bond":
		value := x.Bond
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgBondProvider"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgBondProvider does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBondProvider) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgBondProvider.creator":
		x.Creator = value.Interface().(string)
	case "arkeo.arkeo.MsgBondProvider.provider":
		x.Provider = value.Interface().(string)
	case "arkeo.arkeo.MsgBondProvider.service":
		x.Service = value.Interface().(string)
	case "arkeo.arkeo.MsgBondProvider.bond":
		x.Bond = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgBondProvider"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgBondProvider does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBondProvider) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgBondProvider.creator":
		panic(fmt.Errorf("field creator of message arkeo.arkeo.MsgBondProvider is not mutable"))
	case "arkeo.arkeo.MsgBondProvider.provider":
		panic(fmt.Errorf("field provider of message arkeo.arkeo.MsgBondProvider is not mutable"))
	case "arkeo.arkeo.MsgBondProvider.service":
		panic(fmt.Errorf("field service of message arkeo.arkeo.MsgBondProvider is not mutable"))
	case "arkeo.arkeo.MsgBondProvider.bond":
		panic(fmt.Errorf("field bond of message arkeo.arkeo.MsgBondProvider is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgBondProvider"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgBondProvider does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgBondProvider) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgBondProvider.creator":
		return protoreflect.ValueOfString("")
	case "arkeo.arkeo.MsgBondProvider.provider":
		return protoreflect.ValueOfString("")
	case "arkeo.arkeo.MsgBondProvider.service":
		return protoreflect.ValueOfString("")
	case "arkeo.arkeo.MsgBondProvider.bond":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgBondProvider"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgBondProvider does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgBondProvider) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in arkeo.arkeo.MsgBondProvider", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgBondProvider) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBondProvider) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgBondProvider) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgBondProvider) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgBondProvider)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Provider)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Service)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Bond)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgBondProvider)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Bond) > 0 {
			i -= len(x.Bond)
			copy(dAtA[i:], x.Bond)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Bond)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Service) > 0 {
			i -= len(x.Service)
			copy(dAtA[i:], x.Service)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Service)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Provider) > 0 {
			i -= len(x.Provider)
			copy(dAtA[i:], x.Provider)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Provider)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgBondProvider)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgBondProvider: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgBondProvider: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Provider", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Provider = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Service", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Service = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Bond", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Bond = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgBondProviderResponse protoreflect.MessageDescriptor
)

func init() {
	file_arkeo_arkeo_tx_proto_init()
	md_MsgBondProviderResponse = File_arkeo_arkeo_tx_proto.Messages().ByName("MsgBondProviderResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgBondProviderResponse)(nil)

type fastReflection_MsgBondProviderResponse MsgBondProviderResponse

func (x *MsgBondProviderResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgBondProviderResponse)(x)
}

func (x *MsgBondProviderResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_arkeo_arkeo_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgBondProviderResponse_messageType fastReflection_MsgBondProviderResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgBondProviderResponse_messageType{}

type fastReflection_MsgBondProviderResponse_messageType struct{}

func (x fastReflection_MsgBondProviderResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgBondProviderResponse)(nil)
}
func (x fastReflection_MsgBondProviderResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgBondProviderResponse)
}
func (x fastReflection_MsgBondProviderResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgBondProviderResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgBondProviderResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgBondProviderResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgBondProviderResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgBondProviderResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgBondProviderResponse) New() protoreflect.Message {
	return new(fastReflection_MsgBondProviderResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgBondProviderResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgBondProviderResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgBondProviderResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgBondProviderResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgBondProviderResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgBondProviderResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBondProviderResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgBondProviderResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgBondProviderResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgBondProviderResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgBondProviderResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgBondProviderResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBondProviderResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgBondProviderResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgBondProviderResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBondProviderResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgBondProviderResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgBondProviderResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgBondProviderResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgBondProviderResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgBondProviderResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgBondProviderResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in arkeo.arkeo.MsgBondProviderResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgBondProviderResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgBondProviderResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgBondProviderResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgBondProviderResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgBondProviderResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgBondProviderResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgBondProviderResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgBondProviderResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgBondProviderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgModProvider_9_list)(nil)

type _MsgModProvider_9_list struct {
	list *[]*v1beta1.Coin
}

func (x *_MsgModProvider_9_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgModProvider_9_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgModProvider_9_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_MsgModProvider_9_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgModProvider_9_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgModProvider_9_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgModProvider_9_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgModProvider_9_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgModProvider_10_list)(nil)

type _MsgModProvider_10_list struct {
	list *[]*v1beta1.Coin
}

func (x *_MsgModProvider_10_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgModProvider_10_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgModProvider_10_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_MsgModProvider_10_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgModProvider_10_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgModProvider_10_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgModProvider_10_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgModProvider_10_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgModProvider                       protoreflect.MessageDescriptor
	fd_MsgModProvider_creator               protoreflect.FieldDescriptor
	fd_MsgModProvider_provider              protoreflect.FieldDescriptor
	fd_MsgModProvider_service               protoreflect.FieldDescriptor
	fd_MsgModProvider_metadata_uri          protoreflect.FieldDescriptor
	fd_MsgModProvider_metadata_nonce        protoreflect.FieldDescriptor
	fd_MsgModProvider_status                protoreflect.FieldDescriptor
	fd_MsgModProvider_min_contract_duration protoreflect.FieldDescriptor
	fd_MsgModProvider_max_contract_duration protoreflect.FieldDescriptor
	fd_MsgModProvider_subscription_rate     protoreflect.FieldDescriptor
	fd_MsgModProvider_pay_as_you_go_rate    protoreflect.FieldDescriptor
	fd_MsgModProvider_settlement_duration   protoreflect.FieldDescriptor
)

func init() {
	file_arkeo_arkeo_tx_proto_init()
	md_MsgModProvider = File_arkeo_arkeo_tx_proto.Messages().ByName("MsgModProvider")
	fd_MsgModProvider_creator = md_MsgModProvider.Fields().ByName("creator")
	fd_MsgModProvider_provider = md_MsgModProvider.Fields().ByName("provider")
	fd_MsgModProvider_service = md_MsgModProvider.Fields().ByName("service")
	fd_MsgModProvider_metadata_uri = md_MsgModProvider.Fields().ByName("metadata_uri")
	fd_MsgModProvider_metadata_nonce = md_MsgModProvider.Fields().ByName("metadata_nonce")
	fd_MsgModProvider_status = md_MsgModProvider.Fields().ByName("status")
	fd_MsgModProvider_min_contract_duration = md_MsgModProvider.Fields().ByName("min_contract_duration")
	fd_MsgModProvider_max_contract_duration = md_MsgModProvider.Fields().ByName("max_contract_duration")
	fd_MsgModProvider_subscription_rate = md_MsgModProvider.Fields().ByName("subscription_rate")
	fd_MsgModProvider_pay_as_you_go_rate = md_MsgModProvider.Fields().ByName("pay_as_you_go_rate")
	fd_MsgModProvider_settlement_duration = md_MsgModProvider.Fields().ByName("settlement_duration")
}

var _ protoreflect.Message = (*fastReflection_MsgModProvider)(nil)

type fastReflection_MsgModProvider MsgModProvider

func (x *MsgModProvider) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgModProvider)(x)
}

func (x *MsgModProvider) slowProtoReflect() protoreflect.Message {
	mi := &file_arkeo_arkeo_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgModProvider_messageType fastReflection_MsgModProvider_messageType
var _ protoreflect.MessageType = fastReflection_MsgModProvider_messageType{}

type fastReflection_MsgModProvider_messageType struct{}

func (x fastReflection_MsgModProvider_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgModProvider)(nil)
}
func (x fastReflection_MsgModProvider_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgModProvider)
}
func (x fastReflection_MsgModProvider_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgModProvider
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgModProvider) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgModProvider
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgModProvider) Type() protoreflect.MessageType {
	return _fastReflection_MsgModProvider_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgModProvider) New() protoreflect.Message {
	return new(fastReflection_MsgModProvider)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgModProvider) Interface() protoreflect.ProtoMessage {
	return (*MsgModProvider)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgModProvider) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgModProvider_creator, value) {
			return
		}
	}
	if len(x.Provider) != 0 {
		value := protoreflect.ValueOfBytes(x.Provider)
		if !f(fd_MsgModProvider_provider, value) {
			return
		}
	}
	if x.Service != "" {
		value := protoreflect.ValueOfString(x.Service)
		if !f(fd_MsgModProvider_service, value) {
			return
		}
	}
	if x.MetadataUri != "" {
		value := protoreflect.ValueOfString(x.MetadataUri)
		if !f(fd_MsgModProvider_metadata_uri, value) {
			return
		}
	}
	if x.MetadataNonce != uint64(0) {
		value := protoreflect.ValueOfUint64(x.MetadataNonce)
		if !f(fd_MsgModProvider_metadata_nonce, value) {
			return
		}
	}
	if x.Status != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Status))
		if !f(fd_MsgModProvider_status, value) {
			return
		}
	}
	if x.MinContractDuration != int64(0) {
		value := protoreflect.ValueOfInt64(x.MinContractDuration)
		if !f(fd_MsgModProvider_min_contract_duration, value) {
			return
		}
	}
	if x.MaxContractDuration != int64(0) {
		value := protoreflect.ValueOfInt64(x.MaxContractDuration)
		if !f(fd_MsgModProvider_max_contract_duration, value) {
			return
		}
	}
	if len(x.SubscriptionRate) != 0 {
		value := protoreflect.ValueOfList(&_MsgModProvider_9_list{list: &x.SubscriptionRate})
		if !f(fd_MsgModProvider_subscription_rate, value) {
			return
		}
	}
	if len(x.PayAsYouGoRate) != 0 {
		value := protoreflect.ValueOfList(&_MsgModProvider_10_list{list: &x.PayAsYouGoRate})
		if !f(fd_MsgModProvider_pay_as_you_go_rate, value) {
			return
		}
	}
	if x.SettlementDuration != int64(0) {
		value := protoreflect.ValueOfInt64(x.SettlementDuration)
		if !f(fd_MsgModProvider_settlement_duration, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgModProvider) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgModProvider.creator":
		return x.Creator != ""
	case "arkeo.arkeo.MsgModProvider.provider":
		return len(x.Provider) != 0
	case "arkeo.arkeo.MsgModProvider.service":
		return x.Service != ""
	case "arkeo.arkeo.MsgModProvider.metadata_uri":
		return x.MetadataUri != ""
	case "arkeo.arkeo.MsgModProvider.metadata_nonce":
		return x.MetadataNonce != uint64(0)
	case "arkeo.arkeo.MsgModProvider.status":
		return x.Status != 0
	case "arkeo.arkeo.MsgModProvider.min_contract_duration":
		return x.MinContractDuration != int64(0)
	case "arkeo.arkeo.MsgModProvider.max_contract_duration":
		return x.MaxContractDuration != int64(0)
	case "arkeo.arkeo.MsgModProvider.subscription_rate":
		return len(x.SubscriptionRate) != 0
	case "arkeo.arkeo.MsgModProvider.pay_as_you_go_rate":
		return len(x.PayAsYouGoRate) != 0
	case "arkeo.arkeo.MsgModProvider.settlement_duration":
		return x.SettlementDuration != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgModProvider"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgModProvider does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgModProvider) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgModProvider.creator":
		x.Creator = ""
	case "arkeo.arkeo.MsgModProvider.provider":
		x.Provider = nil
	case "arkeo.arkeo.MsgModProvider.service":
		x.Service = ""
	case "arkeo.arkeo.MsgModProvider.metadata_uri":
		x.MetadataUri = ""
	case "arkeo.arkeo.MsgModProvider.metadata_nonce":
		x.MetadataNonce = uint64(0)
	case "arkeo.arkeo.MsgModProvider.status":
		x.Status = 0
	case "arkeo.arkeo.MsgModProvider.min_contract_duration":
		x.MinContractDuration = int64(0)
	case "arkeo.arkeo.MsgModProvider.max_contract_duration":
		x.MaxContractDuration = int64(0)
	case "arkeo.arkeo.MsgModProvider.subscription_rate":
		x.SubscriptionRate = nil
	case "arkeo.arkeo.MsgModProvider.pay_as_you_go_rate":
		x.PayAsYouGoRate = nil
	case "arkeo.arkeo.MsgModProvider.settlement_duration":
		x.SettlementDuration = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgModProvider"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgModProvider does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgModProvider) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "arkeo.arkeo.MsgModProvider.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "arkeo.arkeo.MsgModProvider.provider":
		value := x.Provider
		return protoreflect.ValueOfBytes(value)
	case "arkeo.arkeo.MsgModProvider.service":
		value := x.Service
		return protoreflect.ValueOfString(value)
	case "arkeo.arkeo.MsgModProvider.metadata_uri":
		value := x.MetadataUri
		return protoreflect.ValueOfString(value)
	case "arkeo.arkeo.MsgModProvider.metadata_nonce":
		value := x.MetadataNonce
		return protoreflect.ValueOfUint64(value)
	case "arkeo.arkeo.MsgModProvider.status":
		value := x.Status
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "arkeo.arkeo.MsgModProvider.min_contract_duration":
		value := x.MinContractDuration
		return protoreflect.ValueOfInt64(value)
	case "arkeo.arkeo.MsgModProvider.max_contract_duration":
		value := x.MaxContractDuration
		return protoreflect.ValueOfInt64(value)
	case "arkeo.arkeo.MsgModProvider.subscription_rate":
		if len(x.SubscriptionRate) == 0 {
			return protoreflect.ValueOfList(&_MsgModProvider_9_list{})
		}
		listValue := &_MsgModProvider_9_list{list: &x.SubscriptionRate}
		return protoreflect.ValueOfList(listValue)
	case "arkeo.arkeo.MsgModProvider.pay_as_you_go_rate":
		if len(x.PayAsYouGoRate) == 0 {
			return protoreflect.ValueOfList(&_MsgModProvider_10_list{})
		}
		listValue := &_MsgModProvider_10_list{list: &x.PayAsYouGoRate}
		return protoreflect.ValueOfList(listValue)
	case "arkeo.arkeo.MsgModProvider.settlement_duration":
		value := x.SettlementDuration
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgModProvider"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgModProvider does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgModProvider) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgModProvider.creator":
		x.Creator = value.Interface().(string)
	case "arkeo.arkeo.MsgModProvider.provider":
		x.Provider = value.Bytes()
	case "arkeo.arkeo.MsgModProvider.service":
		x.Service = value.Interface().(string)
	case "arkeo.arkeo.MsgModProvider.metadata_uri":
		x.MetadataUri = value.Interface().(string)
	case "arkeo.arkeo.MsgModProvider.metadata_nonce":
		x.MetadataNonce = value.Uint()
	case "arkeo.arkeo.MsgModProvider.status":
		x.Status = (ProviderStatus)(value.Enum())
	case "arkeo.arkeo.MsgModProvider.min_contract_duration":
		x.MinContractDuration = value.Int()
	case "arkeo.arkeo.MsgModProvider.max_contract_duration":
		x.MaxContractDuration = value.Int()
	case "arkeo.arkeo.MsgModProvider.subscription_rate":
		lv := value.List()
		clv := lv.(*_MsgModProvider_9_list)
		x.SubscriptionRate = *clv.list
	case "arkeo.arkeo.MsgModProvider.pay_as_you_go_rate":
		lv := value.List()
		clv := lv.(*_MsgModProvider_10_list)
		x.PayAsYouGoRate = *clv.list
	case "arkeo.arkeo.MsgModProvider.settlement_duration":
		x.SettlementDuration = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgModProvider"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgModProvider does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgModProvider) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgModProvider.subscription_rate":
		if x.SubscriptionRate == nil {
			x.SubscriptionRate = []*v1beta1.Coin{}
		}
		value := &_MsgModProvider_9_list{list: &x.SubscriptionRate}
		return protoreflect.ValueOfList(value)
	case "arkeo.arkeo.MsgModProvider.pay_as_you_go_rate":
		if x.PayAsYouGoRate == nil {
			x.PayAsYouGoRate = []*v1beta1.Coin{}
		}
		value := &_MsgModProvider_10_list{list: &x.PayAsYouGoRate}
		return protoreflect.ValueOfList(value)
	case "arkeo.arkeo.MsgModProvider.creator":
		panic(fmt.Errorf("field creator of message arkeo.arkeo.MsgModProvider is not mutable"))
	case "arkeo.arkeo.MsgModProvider.provider":
		panic(fmt.Errorf("field provider of message arkeo.arkeo.MsgModProvider is not mutable"))
	case "arkeo.arkeo.MsgModProvider.service":
		panic(fmt.Errorf("field service of message arkeo.arkeo.MsgModProvider is not mutable"))
	case "arkeo.arkeo.MsgModProvider.metadata_uri":
		panic(fmt.Errorf("field metadata_uri of message arkeo.arkeo.MsgModProvider is not mutable"))
	case "arkeo.arkeo.MsgModProvider.metadata_nonce":
		panic(fmt.Errorf("field metadata_nonce of message arkeo.arkeo.MsgModProvider is not mutable"))
	case "arkeo.arkeo.MsgModProvider.status":
		panic(fmt.Errorf("field status of message arkeo.arkeo.MsgModProvider is not mutable"))
	case "arkeo.arkeo.MsgModProvider.min_contract_duration":
		panic(fmt.Errorf("field min_contract_duration of message arkeo.arkeo.MsgModProvider is not mutable"))
	case "arkeo.arkeo.MsgModProvider.max_contract_duration":
		panic(fmt.Errorf("field max_contract_duration of message arkeo.arkeo.MsgModProvider is not mutable"))
	case "arkeo.arkeo.MsgModProvider.settlement_duration":
		panic(fmt.Errorf("field settlement_duration of message arkeo.arkeo.MsgModProvider is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgModProvider"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgModProvider does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgModProvider) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgModProvider.creator":
		return protoreflect.ValueOfString("")
	case "arkeo.arkeo.MsgModProvider.provider":
		return protoreflect.ValueOfBytes(nil)
	case "arkeo.arkeo.MsgModProvider.service":
		return protoreflect.ValueOfString("")
	case "arkeo.arkeo.MsgModProvider.metadata_uri":
		return protoreflect.ValueOfString("")
	case "arkeo.arkeo.MsgModProvider.metadata_nonce":
		return protoreflect.ValueOfUint64(uint64(0))
	case "arkeo.arkeo.MsgModProvider.status":
		return protoreflect.ValueOfEnum(0)
	case "arkeo.arkeo.MsgModProvider.min_contract_duration":
		return protoreflect.ValueOfInt64(int64(0))
	case "arkeo.arkeo.MsgModProvider.max_contract_duration":
		return protoreflect.ValueOfInt64(int64(0))
	case "arkeo.arkeo.MsgModProvider.subscription_rate":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_MsgModProvider_9_list{list: &list})
	case "arkeo.arkeo.MsgModProvider.pay_as_you_go_rate":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_MsgModProvider_10_list{list: &list})
	case "arkeo.arkeo.MsgModProvider.settlement_duration":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgModProvider"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgModProvider does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgModProvider) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in arkeo.arkeo.MsgModProvider", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgModProvider) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgModProvider) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgModProvider) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgModProvider) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgModProvider)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Provider)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Service)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MetadataUri)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.MetadataNonce != 0 {
			n += 1 + runtime.Sov(uint64(x.MetadataNonce))
		}
		if x.Status != 0 {
			n += 1 + runtime.Sov(uint64(x.Status))
		}
		if x.MinContractDuration != 0 {
			n += 1 + runtime.Sov(uint64(x.MinContractDuration))
		}
		if x.MaxContractDuration != 0 {
			n += 1 + runtime.Sov(uint64(x.MaxContractDuration))
		}
		if len(x.SubscriptionRate) > 0 {
			for _, e := range x.SubscriptionRate {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.PayAsYouGoRate) > 0 {
			for _, e := range x.PayAsYouGoRate {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.SettlementDuration != 0 {
			n += 1 + runtime.Sov(uint64(x.SettlementDuration))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgModProvider)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.SettlementDuration != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SettlementDuration))
			i--
			dAtA[i] = 0x58
		}
		if len(x.PayAsYouGoRate) > 0 {
			for iNdEx := len(x.PayAsYouGoRate) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.PayAsYouGoRate[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x52
			}
		}
		if len(x.SubscriptionRate) > 0 {
			for iNdEx := len(x.SubscriptionRate) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.SubscriptionRate[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x4a
			}
		}
		if x.MaxContractDuration != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MaxContractDuration))
			i--
			dAtA[i] = 0x40
		}
		if x.MinContractDuration != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MinContractDuration))
			i--
			dAtA[i] = 0x38
		}
		if x.Status != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Status))
			i--
			dAtA[i] = 0x30
		}
		if x.MetadataNonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MetadataNonce))
			i--
			dAtA[i] = 0x28
		}
		if len(x.MetadataUri) > 0 {
			i -= len(x.MetadataUri)
			copy(dAtA[i:], x.MetadataUri)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MetadataUri)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Service) > 0 {
			i -= len(x.Service)
			copy(dAtA[i:], x.Service)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Service)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Provider) > 0 {
			i -= len(x.Provider)
			copy(dAtA[i:], x.Provider)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Provider)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgModProvider)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgModProvider: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgModProvider: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Provider", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Provider = append(x.Provider[:0], dAtA[iNdEx:postIndex]...)
				if x.Provider == nil {
					x.Provider = []byte{}
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Service", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Service = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MetadataUri", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MetadataUri = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MetadataNonce", wireType)
				}
				x.MetadataNonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MetadataNonce |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
				}
				x.Status = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Status |= ProviderStatus(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MinContractDuration", wireType)
				}
				x.MinContractDuration = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MinContractDuration |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MaxContractDuration", wireType)
				}
				x.MaxContractDuration = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MaxContractDuration |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SubscriptionRate", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SubscriptionRate = append(x.SubscriptionRate, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.SubscriptionRate[len(x.SubscriptionRate)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PayAsYouGoRate", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PayAsYouGoRate = append(x.PayAsYouGoRate, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.PayAsYouGoRate[len(x.PayAsYouGoRate)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 11:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SettlementDuration", wireType)
				}
				x.SettlementDuration = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SettlementDuration |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgModProviderResponse protoreflect.MessageDescriptor
)

func init() {
	file_arkeo_arkeo_tx_proto_init()
	md_MsgModProviderResponse = File_arkeo_arkeo_tx_proto.Messages().ByName("MsgModProviderResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgModProviderResponse)(nil)

type fastReflection_MsgModProviderResponse MsgModProviderResponse

func (x *MsgModProviderResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgModProviderResponse)(x)
}

func (x *MsgModProviderResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_arkeo_arkeo_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgModProviderResponse_messageType fastReflection_MsgModProviderResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgModProviderResponse_messageType{}

type fastReflection_MsgModProviderResponse_messageType struct{}

func (x fastReflection_MsgModProviderResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgModProviderResponse)(nil)
}
func (x fastReflection_MsgModProviderResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgModProviderResponse)
}
func (x fastReflection_MsgModProviderResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgModProviderResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgModProviderResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgModProviderResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgModProviderResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgModProviderResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgModProviderResponse) New() protoreflect.Message {
	return new(fastReflection_MsgModProviderResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgModProviderResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgModProviderResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgModProviderResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgModProviderResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgModProviderResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgModProviderResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgModProviderResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgModProviderResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgModProviderResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgModProviderResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgModProviderResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgModProviderResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgModProviderResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgModProviderResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgModProviderResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgModProviderResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgModProviderResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgModProviderResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgModProviderResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgModProviderResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgModProviderResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgModProviderResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in arkeo.arkeo.MsgModProviderResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgModProviderResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgModProviderResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgModProviderResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgModProviderResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgModProviderResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgModProviderResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgModProviderResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgModProviderResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgModProviderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgOpenContract                     protoreflect.MessageDescriptor
	fd_MsgOpenContract_creator             protoreflect.FieldDescriptor
	fd_MsgOpenContract_provider            protoreflect.FieldDescriptor
	fd_MsgOpenContract_service             protoreflect.FieldDescriptor
	fd_MsgOpenContract_client              protoreflect.FieldDescriptor
	fd_MsgOpenContract_delegate            protoreflect.FieldDescriptor
	fd_MsgOpenContract_contract_type       protoreflect.FieldDescriptor
	fd_MsgOpenContract_duration            protoreflect.FieldDescriptor
	fd_MsgOpenContract_rate                protoreflect.FieldDescriptor
	fd_MsgOpenContract_deposit             protoreflect.FieldDescriptor
	fd_MsgOpenContract_settlement_duration protoreflect.FieldDescriptor
	fd_MsgOpenContract_authorization       protoreflect.FieldDescriptor
	fd_MsgOpenContract_queries_per_minute  protoreflect.FieldDescriptor
)

func init() {
	file_arkeo_arkeo_tx_proto_init()
	md_MsgOpenContract = File_arkeo_arkeo_tx_proto.Messages().ByName("MsgOpenContract")
	fd_MsgOpenContract_creator = md_MsgOpenContract.Fields().ByName("creator")
	fd_MsgOpenContract_provider = md_MsgOpenContract.Fields().ByName("provider")
	fd_MsgOpenContract_service = md_MsgOpenContract.Fields().ByName("service")
	fd_MsgOpenContract_client = md_MsgOpenContract.Fields().ByName("client")
	fd_MsgOpenContract_delegate = md_MsgOpenContract.Fields().ByName("delegate")
	fd_MsgOpenContract_contract_type = md_MsgOpenContract.Fields().ByName("contract_type")
	fd_MsgOpenContract_duration = md_MsgOpenContract.Fields().ByName("duration")
	fd_MsgOpenContract_rate = md_MsgOpenContract.Fields().ByName("rate")
	fd_MsgOpenContract_deposit = md_MsgOpenContract.Fields().ByName("deposit")
	fd_MsgOpenContract_settlement_duration = md_MsgOpenContract.Fields().ByName("settlement_duration")
	fd_MsgOpenContract_authorization = md_MsgOpenContract.Fields().ByName("authorization")
	fd_MsgOpenContract_queries_per_minute = md_MsgOpenContract.Fields().ByName("queries_per_minute")
}

var _ protoreflect.Message = (*fastReflection_MsgOpenContract)(nil)

type fastReflection_MsgOpenContract MsgOpenContract

func (x *MsgOpenContract) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgOpenContract)(x)
}

func (x *MsgOpenContract) slowProtoReflect() protoreflect.Message {
	mi := &file_arkeo_arkeo_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgOpenContract_messageType fastReflection_MsgOpenContract_messageType
var _ protoreflect.MessageType = fastReflection_MsgOpenContract_messageType{}

type fastReflection_MsgOpenContract_messageType struct{}

func (x fastReflection_MsgOpenContract_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgOpenContract)(nil)
}
func (x fastReflection_MsgOpenContract_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgOpenContract)
}
func (x fastReflection_MsgOpenContract_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgOpenContract
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgOpenContract) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgOpenContract
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgOpenContract) Type() protoreflect.MessageType {
	return _fastReflection_MsgOpenContract_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgOpenContract) New() protoreflect.Message {
	return new(fastReflection_MsgOpenContract)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgOpenContract) Interface() protoreflect.ProtoMessage {
	return (*MsgOpenContract)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgOpenContract) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgOpenContract_creator, value) {
			return
		}
	}
	if x.Provider != "" {
		value := protoreflect.ValueOfString(x.Provider)
		if !f(fd_MsgOpenContract_provider, value) {
			return
		}
	}
	if x.Service != "" {
		value := protoreflect.ValueOfString(x.Service)
		if !f(fd_MsgOpenContract_service, value) {
			return
		}
	}
	if x.Client != "" {
		value := protoreflect.ValueOfString(x.Client)
		if !f(fd_MsgOpenContract_client, value) {
			return
		}
	}
	if x.Delegate != "" {
		value := protoreflect.ValueOfString(x.Delegate)
		if !f(fd_MsgOpenContract_delegate, value) {
			return
		}
	}
	if x.ContractType != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.ContractType))
		if !f(fd_MsgOpenContract_contract_type, value) {
			return
		}
	}
	if x.Duration != int64(0) {
		value := protoreflect.ValueOfInt64(x.Duration)
		if !f(fd_MsgOpenContract_duration, value) {
			return
		}
	}
	if x.Rate != nil {
		value := protoreflect.ValueOfMessage(x.Rate.ProtoReflect())
		if !f(fd_MsgOpenContract_rate, value) {
			return
		}
	}
	if x.Deposit != "" {
		value := protoreflect.ValueOfString(x.Deposit)
		if !f(fd_MsgOpenContract_deposit, value) {
			return
		}
	}
	if x.SettlementDuration != int64(0) {
		value := protoreflect.ValueOfInt64(x.SettlementDuration)
		if !f(fd_MsgOpenContract_settlement_duration, value) {
			return
		}
	}
	if x.Authorization != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Authorization))
		if !f(fd_MsgOpenContract_authorization, value) {
			return
		}
	}
	if x.QueriesPerMinute != int64(0) {
		value := protoreflect.ValueOfInt64(x.QueriesPerMinute)
		if !f(fd_MsgOpenContract_queries_per_minute, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgOpenContract) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgOpenContract.creator":
		return x.Creator != ""
	case "arkeo.arkeo.MsgOpenContract.provider":
		return x.Provider != ""
	case "arkeo.arkeo.MsgOpenContract.service":
		return x.Service != ""
	case "arkeo.arkeo.MsgOpenContract.client":
		return x.Client != ""
	case "arkeo.arkeo.MsgOpenContract.delegate":
		return x.Delegate != ""
	case "arkeo.arkeo.MsgOpenContract.contract_type":
		return x.ContractType != 0
	case "arkeo.arkeo.MsgOpenContract.duration":
		return x.Duration != int64(0)
	case "arkeo.arkeo.MsgOpenContract.rate":
		return x.Rate != nil
	case "arkeo.arkeo.MsgOpenContract.deposit":
		return x.Deposit != ""
	case "arkeo.arkeo.MsgOpenContract.settlement_duration":
		return x.SettlementDuration != int64(0)
	case "arkeo.arkeo.MsgOpenContract.authorization":
		return x.Authorization != 0
	case "arkeo.arkeo.MsgOpenContract.queries_per_minute":
		return x.QueriesPerMinute != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgOpenContract"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgOpenContract does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgOpenContract) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgOpenContract.creator":
		x.Creator = ""
	case "arkeo.arkeo.MsgOpenContract.provider":
		x.Provider = ""
	case "arkeo.arkeo.MsgOpenContract.service":
		x.Service = ""
	case "arkeo.arkeo.MsgOpenContract.client":
		x.Client = ""
	case "arkeo.arkeo.MsgOpenContract.delegate":
		x.Delegate = ""
	case "arkeo.arkeo.MsgOpenContract.contract_type":
		x.ContractType = 0
	case "arkeo.arkeo.MsgOpenContract.duration":
		x.Duration = int64(0)
	case "arkeo.arkeo.MsgOpenContract.rate":
		x.Rate = nil
	case "arkeo.arkeo.MsgOpenContract.deposit":
		x.Deposit = ""
	case "arkeo.arkeo.MsgOpenContract.settlement_duration":
		x.SettlementDuration = int64(0)
	case "arkeo.arkeo.MsgOpenContract.authorization":
		x.Authorization = 0
	case "arkeo.arkeo.MsgOpenContract.queries_per_minute":
		x.QueriesPerMinute = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgOpenContract"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgOpenContract does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgOpenContract) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "arkeo.arkeo.MsgOpenContract.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "arkeo.arkeo.MsgOpenContract.provider":
		value := x.Provider
		return protoreflect.ValueOfString(value)
	case "arkeo.arkeo.MsgOpenContract.service":
		value := x.Service
		return protoreflect.ValueOfString(value)
	case "arkeo.arkeo.MsgOpenContract.client":
		value := x.Client
		return protoreflect.ValueOfString(value)
	case "arkeo.arkeo.MsgOpenContract.delegate":
		value := x.Delegate
		return protoreflect.ValueOfString(value)
	case "arkeo.arkeo.MsgOpenContract.contract_type":
		value := x.ContractType
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "arkeo.arkeo.MsgOpenContract.duration":
		value := x.Duration
		return protoreflect.ValueOfInt64(value)
	case "arkeo.arkeo.MsgOpenContract.rate":
		value := x.Rate
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "arkeo.arkeo.MsgOpenContract.deposit":
		value := x.Deposit
		return protoreflect.ValueOfString(value)
	case "arkeo.arkeo.MsgOpenContract.settlement_duration":
		value := x.SettlementDuration
		return protoreflect.ValueOfInt64(value)
	case "arkeo.arkeo.MsgOpenContract.authorization":
		value := x.Authorization
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "arkeo.arkeo.MsgOpenContract.queries_per_minute":
		value := x.QueriesPerMinute
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgOpenContract"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgOpenContract does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgOpenContract) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgOpenContract.creator":
		x.Creator = value.Interface().(string)
	case "arkeo.arkeo.MsgOpenContract.provider":
		x.Provider = value.Interface().(string)
	case "arkeo.arkeo.MsgOpenContract.service":
		x.Service = value.Interface().(string)
	case "arkeo.arkeo.MsgOpenContract.client":
		x.Client = value.Interface().(string)
	case "arkeo.arkeo.MsgOpenContract.delegate":
		x.Delegate = value.Interface().(string)
	case "arkeo.arkeo.MsgOpenContract.contract_type":
		x.ContractType = (ContractType)(value.Enum())
	case "arkeo.arkeo.MsgOpenContract.duration":
		x.Duration = value.Int()
	case "arkeo.arkeo.MsgOpenContract.rate":
		x.Rate = value.Message().Interface().(*v1beta1.Coin)
	case "arkeo.arkeo.MsgOpenContract.deposit":
		x.Deposit = value.Interface().(string)
	case "arkeo.arkeo.MsgOpenContract.settlement_duration":
		x.SettlementDuration = value.Int()
	case "arkeo.arkeo.MsgOpenContract.authorization":
		x.Authorization = (ContractAuthorization)(value.Enum())
	case "arkeo.arkeo.MsgOpenContract.queries_per_minute":
		x.QueriesPerMinute = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgOpenContract"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgOpenContract does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgOpenContract) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgOpenContract.rate":
		if x.Rate == nil {
			x.Rate = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.Rate.ProtoReflect())
	case "arkeo.arkeo.MsgOpenContract.creator":
		panic(fmt.Errorf("field creator of message arkeo.arkeo.MsgOpenContract is not mutable"))
	case "arkeo.arkeo.MsgOpenContract.provider":
		panic(fmt.Errorf("field provider of message arkeo.arkeo.MsgOpenContract is not mutable"))
	case "arkeo.arkeo.MsgOpenContract.service":
		panic(fmt.Errorf("field service of message arkeo.arkeo.MsgOpenContract is not mutable"))
	case "arkeo.arkeo.MsgOpenContract.client":
		panic(fmt.Errorf("field client of message arkeo.arkeo.MsgOpenContract is not mutable"))
	case "arkeo.arkeo.MsgOpenContract.delegate":
		panic(fmt.Errorf("field delegate of message arkeo.arkeo.MsgOpenContract is not mutable"))
	case "arkeo.arkeo.MsgOpenContract.contract_type":
		panic(fmt.Errorf("field contract_type of message arkeo.arkeo.MsgOpenContract is not mutable"))
	case "arkeo.arkeo.MsgOpenContract.duration":
		panic(fmt.Errorf("field duration of message arkeo.arkeo.MsgOpenContract is not mutable"))
	case "arkeo.arkeo.MsgOpenContract.deposit":
		panic(fmt.Errorf("field deposit of message arkeo.arkeo.MsgOpenContract is not mutable"))
	case "arkeo.arkeo.MsgOpenContract.settlement_duration":
		panic(fmt.Errorf("field settlement_duration of message arkeo.arkeo.MsgOpenContract is not mutable"))
	case "arkeo.arkeo.MsgOpenContract.authorization":
		panic(fmt.Errorf("field authorization of message arkeo.arkeo.MsgOpenContract is not mutable"))
	case "arkeo.arkeo.MsgOpenContract.queries_per_minute":
		panic(fmt.Errorf("field queries_per_minute of message arkeo.arkeo.MsgOpenContract is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgOpenContract"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgOpenContract does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgOpenContract) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgOpenContract.creator":
		return protoreflect.ValueOfString("")
	case "arkeo.arkeo.MsgOpenContract.provider":
		return protoreflect.ValueOfString("")
	case "arkeo.arkeo.MsgOpenContract.service":
		return protoreflect.ValueOfString("")
	case "arkeo.arkeo.MsgOpenContract.client":
		return protoreflect.ValueOfString("")
	case "arkeo.arkeo.MsgOpenContract.delegate":
		return protoreflect.ValueOfString("")
	case "arkeo.arkeo.MsgOpenContract.contract_type":
		return protoreflect.ValueOfEnum(0)
	case "arkeo.arkeo.MsgOpenContract.duration":
		return protoreflect.ValueOfInt64(int64(0))
	case "arkeo.arkeo.MsgOpenContract.rate":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "arkeo.arkeo.MsgOpenContract.deposit":
		return protoreflect.ValueOfString("")
	case "arkeo.arkeo.MsgOpenContract.settlement_duration":
		return protoreflect.ValueOfInt64(int64(0))
	case "arkeo.arkeo.MsgOpenContract.authorization":
		return protoreflect.ValueOfEnum(0)
	case "arkeo.arkeo.MsgOpenContract.queries_per_minute":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgOpenContract"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgOpenContract does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgOpenContract) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in arkeo.arkeo.MsgOpenContract", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgOpenContract) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgOpenContract) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgOpenContract) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgOpenContract) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgOpenContract)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Provider)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Service)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Client)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Delegate)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ContractType != 0 {
			n += 1 + runtime.Sov(uint64(x.ContractType))
		}
		if x.Duration != 0 {
			n += 1 + runtime.Sov(uint64(x.Duration))
		}
		if x.Rate != nil {
			l = options.Size(x.Rate)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Deposit)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.SettlementDuration != 0 {
			n += 1 + runtime.Sov(uint64(x.SettlementDuration))
		}
		if x.Authorization != 0 {
			n += 1 + runtime.Sov(uint64(x.Authorization))
		}
		if x.QueriesPerMinute != 0 {
			n += 1 + runtime.Sov(uint64(x.QueriesPerMinute))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgOpenContract)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.QueriesPerMinute != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.QueriesPerMinute))
			i--
			dAtA[i] = 0x60
		}
		if x.Authorization != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Authorization))
			i--
			dAtA[i] = 0x58
		}
		if x.SettlementDuration != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SettlementDuration))
			i--
			dAtA[i] = 0x50
		}
		if len(x.Deposit) > 0 {
			i -= len(x.Deposit)
			copy(dAtA[i:], x.Deposit)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Deposit)))
			i--
			dAtA[i] = 0x4a
		}
		if x.Rate != nil {
			encoded, err := options.Marshal(x.Rate)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x42
		}
		if x.Duration != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Duration))
			i--
			dAtA[i] = 0x38
		}
		if x.ContractType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ContractType))
			i--
			dAtA[i] = 0x30
		}
		if len(x.Delegate) > 0 {
			i -= len(x.Delegate)
			copy(dAtA[i:], x.Delegate)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Delegate)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Client) > 0 {
			i -= len(x.Client)
			copy(dAtA[i:], x.Client)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Client)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Service) > 0 {
			i -= len(x.Service)
			copy(dAtA[i:], x.Service)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Service)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Provider) > 0 {
			i -= len(x.Provider)
			copy(dAtA[i:], x.Provider)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Provider)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgOpenContract)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgOpenContract: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgOpenContract: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Provider", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Provider = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Service", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Service = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Client", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Client = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Delegate", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Delegate = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ContractType", wireType)
				}
				x.ContractType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ContractType |= ContractType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
				}
				x.Duration = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Duration |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Rate", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Rate == nil {
					x.Rate = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Rate); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Deposit", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Deposit = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SettlementDuration", wireType)
				}
				x.SettlementDuration = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SettlementDuration |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 11:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Authorization", wireType)
				}
				x.Authorization = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Authorization |= ContractAuthorization(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 12:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field QueriesPerMinute", wireType)
				}
				x.QueriesPerMinute = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.QueriesPerMinute |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgOpenContractResponse protoreflect.MessageDescriptor
)

func init() {
	file_arkeo_arkeo_tx_proto_init()
	md_MsgOpenContractResponse = File_arkeo_arkeo_tx_proto.Messages().ByName("MsgOpenContractResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgOpenContractResponse)(nil)

type fastReflection_MsgOpenContractResponse MsgOpenContractResponse

func (x *MsgOpenContractResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgOpenContractResponse)(x)
}

func (x *MsgOpenContractResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_arkeo_arkeo_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgOpenContractResponse_messageType fastReflection_MsgOpenContractResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgOpenContractResponse_messageType{}

type fastReflection_MsgOpenContractResponse_messageType struct{}

func (x fastReflection_MsgOpenContractResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgOpenContractResponse)(nil)
}
func (x fastReflection_MsgOpenContractResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgOpenContractResponse)
}
func (x fastReflection_MsgOpenContractResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgOpenContractResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgOpenContractResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgOpenContractResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgOpenContractResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgOpenContractResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgOpenContractResponse) New() protoreflect.Message {
	return new(fastReflection_MsgOpenContractResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgOpenContractResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgOpenContractResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgOpenContractResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgOpenContractResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgOpenContractResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgOpenContractResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgOpenContractResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgOpenContractResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgOpenContractResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgOpenContractResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgOpenContractResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgOpenContractResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgOpenContractResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgOpenContractResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgOpenContractResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgOpenContractResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgOpenContractResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgOpenContractResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgOpenContractResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgOpenContractResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgOpenContractResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgOpenContractResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in arkeo.arkeo.MsgOpenContractResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgOpenContractResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgOpenContractResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgOpenContractResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgOpenContractResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgOpenContractResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgOpenContractResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgOpenContractResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgOpenContractResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgOpenContractResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCloseContract             protoreflect.MessageDescriptor
	fd_MsgCloseContract_creator     protoreflect.FieldDescriptor
	fd_MsgCloseContract_contract_id protoreflect.FieldDescriptor
	fd_MsgCloseContract_client      protoreflect.FieldDescriptor
	fd_MsgCloseContract_delegate    protoreflect.FieldDescriptor
)

func init() {
	file_arkeo_arkeo_tx_proto_init()
	md_MsgCloseContract = File_arkeo_arkeo_tx_proto.Messages().ByName("MsgCloseContract")
	fd_MsgCloseContract_creator = md_MsgCloseContract.Fields().ByName("creator")
	fd_MsgCloseContract_contract_id = md_MsgCloseContract.Fields().ByName("contract_id")
	fd_MsgCloseContract_client = md_MsgCloseContract.Fields().ByName("client")
	fd_MsgCloseContract_delegate = md_MsgCloseContract.Fields().ByName("delegate")
}

var _ protoreflect.Message = (*fastReflection_MsgCloseContract)(nil)

type fastReflection_MsgCloseContract MsgCloseContract

func (x *MsgCloseContract) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCloseContract)(x)
}

func (x *MsgCloseContract) slowProtoReflect() protoreflect.Message {
	mi := &file_arkeo_arkeo_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCloseContract_messageType fastReflection_MsgCloseContract_messageType
var _ protoreflect.MessageType = fastReflection_MsgCloseContract_messageType{}

type fastReflection_MsgCloseContract_messageType struct{}

func (x fastReflection_MsgCloseContract_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCloseContract)(nil)
}
func (x fastReflection_MsgCloseContract_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCloseContract)
}
func (x fastReflection_MsgCloseContract_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCloseContract
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCloseContract) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCloseContract
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCloseContract) Type() protoreflect.MessageType {
	return _fastReflection_MsgCloseContract_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCloseContract) New() protoreflect.Message {
	return new(fastReflection_MsgCloseContract)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCloseContract) Interface() protoreflect.ProtoMessage {
	return (*MsgCloseContract)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCloseContract) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgCloseContract_creator, value) {
			return
		}
	}
	if x.ContractId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ContractId)
		if !f(fd_MsgCloseContract_contract_id, value) {
			return
		}
	}
	if len(x.Client) != 0 {
		value := protoreflect.ValueOfBytes(x.Client)
		if !f(fd_MsgCloseContract_client, value) {
			return
		}
	}
	if len(x.Delegate) != 0 {
		value := protoreflect.ValueOfBytes(x.Delegate)
		if !f(fd_MsgCloseContract_delegate, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCloseContract) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgCloseContract.creator":
		return x.Creator != ""
	case "arkeo.arkeo.MsgCloseContract.contract_id":
		return x.ContractId != uint64(0)
	case "arkeo.arkeo.MsgCloseContract.client":
		return len(x.Client) != 0
	case "arkeo.arkeo.MsgCloseContract.delegate":
		return len(x.Delegate) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgCloseContract"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgCloseContract does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCloseContract) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgCloseContract.creator":
		x.Creator = ""
	case "arkeo.arkeo.MsgCloseContract.contract_id":
		x.ContractId = uint64(0)
	case "arkeo.arkeo.MsgCloseContract.client":
		x.Client = nil
	case "arkeo.arkeo.MsgCloseContract.delegate":
		x.Delegate = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgCloseContract"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgCloseContract does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCloseContract) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "arkeo.arkeo.MsgCloseContract.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "arkeo.arkeo.MsgCloseContract.contract_id":
		value := x.ContractId
		return protoreflect.ValueOfUint64(value)
	case "arkeo.arkeo.MsgCloseContract.client":
		value := x.Client
		return protoreflect.ValueOfBytes(value)
	case "arkeo.arkeo.MsgCloseContract.delegate":
		value := x.Delegate
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgCloseContract"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgCloseContract does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCloseContract) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgCloseContract.creator":
		x.Creator = value.Interface().(string)
	case "arkeo.arkeo.MsgCloseContract.contract_id":
		x.ContractId = value.Uint()
	case "arkeo.arkeo.MsgCloseContract.client":
		x.Client = value.Bytes()
	case "arkeo.arkeo.MsgCloseContract.delegate":
		x.Delegate = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgCloseContract"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgCloseContract does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCloseContract) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgCloseContract.creator":
		panic(fmt.Errorf("field creator of message arkeo.arkeo.MsgCloseContract is not mutable"))
	case "arkeo.arkeo.MsgCloseContract.contract_id":
		panic(fmt.Errorf("field contract_id of message arkeo.arkeo.MsgCloseContract is not mutable"))
	case "arkeo.arkeo.MsgCloseContract.client":
		panic(fmt.Errorf("field client of message arkeo.arkeo.MsgCloseContract is not mutable"))
	case "arkeo.arkeo.MsgCloseContract.delegate":
		panic(fmt.Errorf("field delegate of message arkeo.arkeo.MsgCloseContract is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgCloseContract"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgCloseContract does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCloseContract) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgCloseContract.creator":
		return protoreflect.ValueOfString("")
	case "arkeo.arkeo.MsgCloseContract.contract_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "arkeo.arkeo.MsgCloseContract.client":
		return protoreflect.ValueOfBytes(nil)
	case "arkeo.arkeo.MsgCloseContract.delegate":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgCloseContract"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgCloseContract does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCloseContract) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in arkeo.arkeo.MsgCloseContract", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCloseContract) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCloseContract) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCloseContract) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCloseContract) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCloseContract)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ContractId != 0 {
			n += 1 + runtime.Sov(uint64(x.ContractId))
		}
		l = len(x.Client)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Delegate)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCloseContract)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Delegate) > 0 {
			i -= len(x.Delegate)
			copy(dAtA[i:], x.Delegate)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Delegate)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Client) > 0 {
			i -= len(x.Client)
			copy(dAtA[i:], x.Client)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Client)))
			i--
			dAtA[i] = 0x1a
		}
		if x.ContractId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ContractId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCloseContract)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCloseContract: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCloseContract: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ContractId", wireType)
				}
				x.ContractId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ContractId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Client", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Client = append(x.Client[:0], dAtA[iNdEx:postIndex]...)
				if x.Client == nil {
					x.Client = []byte{}
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Delegate", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Delegate = append(x.Delegate[:0], dAtA[iNdEx:postIndex]...)
				if x.Delegate == nil {
					x.Delegate = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCloseContractResponse protoreflect.MessageDescriptor
)

func init() {
	file_arkeo_arkeo_tx_proto_init()
	md_MsgCloseContractResponse = File_arkeo_arkeo_tx_proto.Messages().ByName("MsgCloseContractResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgCloseContractResponse)(nil)

type fastReflection_MsgCloseContractResponse MsgCloseContractResponse

func (x *MsgCloseContractResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCloseContractResponse)(x)
}

func (x *MsgCloseContractResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_arkeo_arkeo_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCloseContractResponse_messageType fastReflection_MsgCloseContractResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgCloseContractResponse_messageType{}

type fastReflection_MsgCloseContractResponse_messageType struct{}

func (x fastReflection_MsgCloseContractResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCloseContractResponse)(nil)
}
func (x fastReflection_MsgCloseContractResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCloseContractResponse)
}
func (x fastReflection_MsgCloseContractResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCloseContractResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCloseContractResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCloseContractResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCloseContractResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgCloseContractResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCloseContractResponse) New() protoreflect.Message {
	return new(fastReflection_MsgCloseContractResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCloseContractResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgCloseContractResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCloseContractResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCloseContractResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgCloseContractResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgCloseContractResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCloseContractResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgCloseContractResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgCloseContractResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCloseContractResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgCloseContractResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgCloseContractResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCloseContractResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgCloseContractResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgCloseContractResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCloseContractResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgCloseContractResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgCloseContractResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCloseContractResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgCloseContractResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgCloseContractResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCloseContractResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in arkeo.arkeo.MsgCloseContractResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCloseContractResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCloseContractResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCloseContractResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCloseContractResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCloseContractResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCloseContractResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCloseContractResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCloseContractResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCloseContractResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgClaimContractIncome                      protoreflect.MessageDescriptor
	fd_MsgClaimContractIncome_creator              protoreflect.FieldDescriptor
	fd_MsgClaimContractIncome_contract_id          protoreflect.FieldDescriptor
	fd_MsgClaimContractIncome_signature            protoreflect.FieldDescriptor
	fd_MsgClaimContractIncome_nonce                protoreflect.FieldDescriptor
	fd_MsgClaimContractIncome_chain_id             protoreflect.FieldDescriptor
	fd_MsgClaimContractIncome_signature_expires_at protoreflect.FieldDescriptor
)

func init() {
	file_arkeo_arkeo_tx_proto_init()
	md_MsgClaimContractIncome = File_arkeo_arkeo_tx_proto.Messages().ByName("MsgClaimContractIncome")
	fd_MsgClaimContractIncome_creator = md_MsgClaimContractIncome.Fields().ByName("creator")
	fd_MsgClaimContractIncome_contract_id = md_MsgClaimContractIncome.Fields().ByName("contract_id")
	fd_MsgClaimContractIncome_signature = md_MsgClaimContractIncome.Fields().ByName("signature")
	fd_MsgClaimContractIncome_nonce = md_MsgClaimContractIncome.Fields().ByName("nonce")
	fd_MsgClaimContractIncome_chain_id = md_MsgClaimContractIncome.Fields().ByName("chain_id")
	fd_MsgClaimContractIncome_signature_expires_at = md_MsgClaimContractIncome.Fields().ByName("signature_expires_at")
}

var _ protoreflect.Message = (*fastReflection_MsgClaimContractIncome)(nil)

type fastReflection_MsgClaimContractIncome MsgClaimContractIncome

func (x *MsgClaimContractIncome) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgClaimContractIncome)(x)
}

func (x *MsgClaimContractIncome) slowProtoReflect() protoreflect.Message {
	mi := &file_arkeo_arkeo_tx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgClaimContractIncome_messageType fastReflection_MsgClaimContractIncome_messageType
var _ protoreflect.MessageType = fastReflection_MsgClaimContractIncome_messageType{}

type fastReflection_MsgClaimContractIncome_messageType struct{}

func (x fastReflection_MsgClaimContractIncome_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgClaimContractIncome)(nil)
}
func (x fastReflection_MsgClaimContractIncome_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgClaimContractIncome)
}
func (x fastReflection_MsgClaimContractIncome_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgClaimContractIncome
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgClaimContractIncome) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgClaimContractIncome
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgClaimContractIncome) Type() protoreflect.MessageType {
	return _fastReflection_MsgClaimContractIncome_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgClaimContractIncome) New() protoreflect.Message {
	return new(fastReflection_MsgClaimContractIncome)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgClaimContractIncome) Interface() protoreflect.ProtoMessage {
	return (*MsgClaimContractIncome)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgClaimContractIncome) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgClaimContractIncome_creator, value) {
			return
		}
	}
	if x.ContractId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ContractId)
		if !f(fd_MsgClaimContractIncome_contract_id, value) {
			return
		}
	}
	if len(x.Signature) != 0 {
		value := protoreflect.ValueOfBytes(x.Signature)
		if !f(fd_MsgClaimContractIncome_signature, value) {
			return
		}
	}
	if x.Nonce != int64(0) {
		value := protoreflect.ValueOfInt64(x.Nonce)
		if !f(fd_MsgClaimContractIncome_nonce, value) {
			return
		}
	}
	if x.ChainId != "" {
		value := protoreflect.ValueOfString(x.ChainId)
		if !f(fd_MsgClaimContractIncome_chain_id, value) {
			return
		}
	}
	if x.SignatureExpiresAt != int64(0) {
		value := protoreflect.ValueOfInt64(x.SignatureExpiresAt)
		if !f(fd_MsgClaimContractIncome_signature_expires_at, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgClaimContractIncome) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgClaimContractIncome.creator":
		return x.Creator != ""
	case "arkeo.arkeo.MsgClaimContractIncome.contract_id":
		return x.ContractId != uint64(0)
	case "arkeo.arkeo.MsgClaimContractIncome.signature":
		return len(x.Signature) != 0
	case "arkeo.arkeo.MsgClaimContractIncome.nonce":
		return x.Nonce != int64(0)
	case "arkeo.arkeo.MsgClaimContractIncome.chain_id":
		return x.ChainId != ""
	case "arkeo.arkeo.MsgClaimContractIncome.signature_expires_at":
		return x.SignatureExpiresAt != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgClaimContractIncome"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgClaimContractIncome does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimContractIncome) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgClaimContractIncome.creator":
		x.Creator = ""
	case "arkeo.arkeo.MsgClaimContractIncome.contract_id":
		x.ContractId = uint64(0)
	case "arkeo.arkeo.MsgClaimContractIncome.signature":
		x.Signature = nil
	case "arkeo.arkeo.MsgClaimContractIncome.nonce":
		x.Nonce = int64(0)
	case "arkeo.arkeo.MsgClaimContractIncome.chain_id":
		x.ChainId = ""
	case "arkeo.arkeo.MsgClaimContractIncome.signature_expires_at":
		x.SignatureExpiresAt = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgClaimContractIncome"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgClaimContractIncome does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgClaimContractIncome) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "arkeo.arkeo.MsgClaimContractIncome.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "arkeo.arkeo.MsgClaimContractIncome.contract_id":
		value := x.ContractId
		return protoreflect.ValueOfUint64(value)
	case "arkeo.arkeo.MsgClaimContractIncome.signature":
		value := x.Signature
		return protoreflect.ValueOfBytes(value)
	case "arkeo.arkeo.MsgClaimContractIncome.nonce":
		value := x.Nonce
		return protoreflect.ValueOfInt64(value)
	case "arkeo.arkeo.MsgClaimContractIncome.chain_id":
		value := x.ChainId
		return protoreflect.ValueOfString(value)
	case "arkeo.arkeo.MsgClaimContractIncome.signature_expires_at":
		value := x.SignatureExpiresAt
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgClaimContractIncome"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgClaimContractIncome does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimContractIncome) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgClaimContractIncome.creator":
		x.Creator = value.Interface().(string)
	case "arkeo.arkeo.MsgClaimContractIncome.contract_id":
		x.ContractId = value.Uint()
	case "arkeo.arkeo.MsgClaimContractIncome.signature":
		x.Signature = value.Bytes()
	case "arkeo.arkeo.MsgClaimContractIncome.nonce":
		x.Nonce = value.Int()
	case "arkeo.arkeo.MsgClaimContractIncome.chain_id":
		x.ChainId = value.Interface().(string)
	case "arkeo.arkeo.MsgClaimContractIncome.signature_expires_at":
		x.SignatureExpiresAt = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgClaimContractIncome"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgClaimContractIncome does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimContractIncome) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgClaimContractIncome.creator":
		panic(fmt.Errorf("field creator of message arkeo.arkeo.MsgClaimContractIncome is not mutable"))
	case "arkeo.arkeo.MsgClaimContractIncome.contract_id":
		panic(fmt.Errorf("field contract_id of message arkeo.arkeo.MsgClaimContractIncome is not mutable"))
	case "arkeo.arkeo.MsgClaimContractIncome.signature":
		panic(fmt.Errorf("field signature of message arkeo.arkeo.MsgClaimContractIncome is not mutable"))
	case "arkeo.arkeo.MsgClaimContractIncome.nonce":
		panic(fmt.Errorf("field nonce of message arkeo.arkeo.MsgClaimContractIncome is not mutable"))
	case "arkeo.arkeo.MsgClaimContractIncome.chain_id":
		panic(fmt.Errorf("field chain_id of message arkeo.arkeo.MsgClaimContractIncome is not mutable"))
	case "arkeo.arkeo.MsgClaimContractIncome.signature_expires_at":
		panic(fmt.Errorf("field signature_expires_at of message arkeo.arkeo.MsgClaimContractIncome is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgClaimContractIncome"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgClaimContractIncome does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgClaimContractIncome) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgClaimContractIncome.creator":
		return protoreflect.ValueOfString("")
	case "arkeo.arkeo.MsgClaimContractIncome.contract_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "arkeo.arkeo.MsgClaimContractIncome.signature":
		return protoreflect.ValueOfBytes(nil)
	case "arkeo.arkeo.MsgClaimContractIncome.nonce":
		return protoreflect.ValueOfInt64(int64(0))
	case "arkeo.arkeo.MsgClaimContractIncome.chain_id":
		return protoreflect.ValueOfString("")
	case "arkeo.arkeo.MsgClaimContractIncome.signature_expires_at":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgClaimContractIncome"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgClaimContractIncome does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgClaimContractIncome) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in arkeo.arkeo.MsgClaimContractIncome", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgClaimContractIncome) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimContractIncome) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgClaimContractIncome) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgClaimContractIncome) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgClaimContractIncome)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ContractId != 0 {
			n += 1 + runtime.Sov(uint64(x.ContractId))
		}
		l = len(x.Signature)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Nonce != 0 {
			n += 1 + runtime.Sov(uint64(x.Nonce))
		}
		l = len(x.ChainId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.SignatureExpiresAt != 0 {
			n += 1 + runtime.Sov(uint64(x.SignatureExpiresAt))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgClaimContractIncome)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.SignatureExpiresAt != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SignatureExpiresAt))
			i--
			dAtA[i] = 0x38
		}
		if len(x.ChainId) > 0 {
			i -= len(x.ChainId)
			copy(dAtA[i:], x.ChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainId)))
			i--
			dAtA[i] = 0x32
		}
		if x.Nonce != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Nonce))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Signature) > 0 {
			i -= len(x.Signature)
			copy(dAtA[i:], x.Signature)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Signature)))
			i--
			dAtA[i] = 0x22
		}
		if x.ContractId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ContractId))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgClaimContractIncome)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgClaimContractIncome: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgClaimContractIncome: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ContractId", wireType)
				}
				x.ContractId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ContractId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signature", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signature = append(x.Signature[:0], dAtA[iNdEx:postIndex]...)
				if x.Signature == nil {
					x.Signature = []byte{}
				}
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
				}
				x.Nonce = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Nonce |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SignatureExpiresAt", wireType)
				}
				x.SignatureExpiresAt = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SignatureExpiresAt |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgClaimContractIncomeResponse protoreflect.MessageDescriptor
)

func init() {
	file_arkeo_arkeo_tx_proto_init()
	md_MsgClaimContractIncomeResponse = File_arkeo_arkeo_tx_proto.Messages().ByName("MsgClaimContractIncomeResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgClaimContractIncomeResponse)(nil)

type fastReflection_MsgClaimContractIncomeResponse MsgClaimContractIncomeResponse

func (x *MsgClaimContractIncomeResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgClaimContractIncomeResponse)(x)
}

func (x *MsgClaimContractIncomeResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_arkeo_arkeo_tx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgClaimContractIncomeResponse_messageType fastReflection_MsgClaimContractIncomeResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgClaimContractIncomeResponse_messageType{}

type fastReflection_MsgClaimContractIncomeResponse_messageType struct{}

func (x fastReflection_MsgClaimContractIncomeResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgClaimContractIncomeResponse)(nil)
}
func (x fastReflection_MsgClaimContractIncomeResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgClaimContractIncomeResponse)
}
func (x fastReflection_MsgClaimContractIncomeResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgClaimContractIncomeResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgClaimContractIncomeResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgClaimContractIncomeResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgClaimContractIncomeResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgClaimContractIncomeResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgClaimContractIncomeResponse) New() protoreflect.Message {
	return new(fastReflection_MsgClaimContractIncomeResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgClaimContractIncomeResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgClaimContractIncomeResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgClaimContractIncomeResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgClaimContractIncomeResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgClaimContractIncomeResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgClaimContractIncomeResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimContractIncomeResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgClaimContractIncomeResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgClaimContractIncomeResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgClaimContractIncomeResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgClaimContractIncomeResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgClaimContractIncomeResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimContractIncomeResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgClaimContractIncomeResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgClaimContractIncomeResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimContractIncomeResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgClaimContractIncomeResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgClaimContractIncomeResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgClaimContractIncomeResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgClaimContractIncomeResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgClaimContractIncomeResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgClaimContractIncomeResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in arkeo.arkeo.MsgClaimContractIncomeResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgClaimContractIncomeResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimContractIncomeResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgClaimContractIncomeResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgClaimContractIncomeResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgClaimContractIncomeResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgClaimContractIncomeResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgClaimContractIncomeResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgClaimContractIncomeResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgClaimContractIncomeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgSetVersion         protoreflect.MessageDescriptor
	fd_MsgSetVersion_creator protoreflect.FieldDescriptor
	fd_MsgSetVersion_version protoreflect.FieldDescriptor
)

func init() {
	file_arkeo_arkeo_tx_proto_init()
	md_MsgSetVersion = File_arkeo_arkeo_tx_proto.Messages().ByName("MsgSetVersion")
	fd_MsgSetVersion_creator = md_MsgSetVersion.Fields().ByName("creator")
	fd_MsgSetVersion_version = md_MsgSetVersion.Fields().ByName("version")
}

var _ protoreflect.Message = (*fastReflection_MsgSetVersion)(nil)

type fastReflection_MsgSetVersion MsgSetVersion

func (x *MsgSetVersion) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgSetVersion)(x)
}

func (x *MsgSetVersion) slowProtoReflect() protoreflect.Message {
	mi := &file_arkeo_arkeo_tx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgSetVersion_messageType fastReflection_MsgSetVersion_messageType
var _ protoreflect.MessageType = fastReflection_MsgSetVersion_messageType{}

type fastReflection_MsgSetVersion_messageType struct{}

func (x fastReflection_MsgSetVersion_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgSetVersion)(nil)
}
func (x fastReflection_MsgSetVersion_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgSetVersion)
}
func (x fastReflection_MsgSetVersion_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSetVersion
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgSetVersion) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSetVersion
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgSetVersion) Type() protoreflect.MessageType {
	return _fastReflection_MsgSetVersion_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgSetVersion) New() protoreflect.Message {
	return new(fastReflection_MsgSetVersion)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgSetVersion) Interface() protoreflect.ProtoMessage {
	return (*MsgSetVersion)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgSetVersion) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgSetVersion_creator, value) {
			return
		}
	}
	if x.Version != int64(0) {
		value := protoreflect.ValueOfInt64(x.Version)
		if !f(fd_MsgSetVersion_version, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgSetVersion) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgSetVersion.creator":
		return x.Creator != ""
	case "arkeo.arkeo.MsgSetVersion.version":
		return x.Version != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgSetVersion"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgSetVersion does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetVersion) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgSetVersion.creator":
		x.Creator = ""
	case "arkeo.arkeo.MsgSetVersion.version":
		x.Version = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgSetVersion"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgSetVersion does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgSetVersion) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "arkeo.arkeo.MsgSetVersion.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "arkeo.arkeo.MsgSetVersion.version":
		value := x.Version
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgSetVersion"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgSetVersion does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetVersion) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgSetVersion.creator":
		x.Creator = value.Interface().(string)
	case "arkeo.arkeo.MsgSetVersion.version":
		x.Version = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgSetVersion"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgSetVersion does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetVersion) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgSetVersion.creator":
		panic(fmt.Errorf("field creator of message arkeo.arkeo.MsgSetVersion is not mutable"))
	case "arkeo.arkeo.MsgSetVersion.version":
		panic(fmt.Errorf("field version of message arkeo.arkeo.MsgSetVersion is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgSetVersion"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgSetVersion does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgSetVersion) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "arkeo.arkeo.MsgSetVersion.creator":
		return protoreflect.ValueOfString("")
	case "arkeo.arkeo.MsgSetVersion.version":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgSetVersion"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgSetVersion does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgSetVersion) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in arkeo.arkeo.MsgSetVersion", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgSetVersion) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetVersion) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgSetVersion) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgSetVersion) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgSetVersion)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Version != 0 {
			n += 1 + runtime.Sov(uint64(x.Version))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgSetVersion)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Version != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Version))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgSetVersion)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSetVersion: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSetVersion: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
				}
				x.Version = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Version |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgSetVersionResponse protoreflect.MessageDescriptor
)

func init() {
	file_arkeo_arkeo_tx_proto_init()
	md_MsgSetVersionResponse = File_arkeo_arkeo_tx_proto.Messages().ByName("MsgSetVersionResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgSetVersionResponse)(nil)

type fastReflection_MsgSetVersionResponse MsgSetVersionResponse

func (x *MsgSetVersionResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgSetVersionResponse)(x)
}

func (x *MsgSetVersionResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_arkeo_arkeo_tx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgSetVersionResponse_messageType fastReflection_MsgSetVersionResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgSetVersionResponse_messageType{}

type fastReflection_MsgSetVersionResponse_messageType struct{}

func (x fastReflection_MsgSetVersionResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgSetVersionResponse)(nil)
}
func (x fastReflection_MsgSetVersionResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgSetVersionResponse)
}
func (x fastReflection_MsgSetVersionResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSetVersionResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgSetVersionResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgSetVersionResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgSetVersionResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgSetVersionResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgSetVersionResponse) New() protoreflect.Message {
	return new(fastReflection_MsgSetVersionResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgSetVersionResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgSetVersionResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgSetVersionResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgSetVersionResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgSetVersionResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgSetVersionResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetVersionResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgSetVersionResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgSetVersionResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgSetVersionResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgSetVersionResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgSetVersionResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetVersionResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgSetVersionResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgSetVersionResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetVersionResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgSetVersionResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgSetVersionResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgSetVersionResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: arkeo.arkeo.MsgSetVersionResponse"))
		}
		panic(fmt.Errorf("message arkeo.arkeo.MsgSetVersionResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgSetVersionResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in arkeo.arkeo.MsgSetVersionResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgSetVersionResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgSetVersionResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgSetVersionResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgSetVersionResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgSetVersionResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgSetVersionResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgSetVersionResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSetVersionResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgSetVersionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: arkeo/arkeo/tx.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgBondProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Provider string `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	Service  string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	Bond     string `protobuf:"bytes,4,opt,name=bond,proto3" json:"bond,omitempty"`
}

func (x *MsgBondProvider) Reset() {
	*x = MsgBondProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arkeo_arkeo_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBondProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBondProvider) ProtoMessage() {}

// Deprecated: Use MsgBondProvider.ProtoReflect.Descriptor instead.
func (*MsgBondProvider) Descriptor() ([]byte, []int) {
	return file_arkeo_arkeo_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgBondProvider) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgBondProvider) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *MsgBondProvider) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *MsgBondProvider) GetBond() string {
	if x != nil {
		return x.Bond
	}
	return ""
}

type MsgBondProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgBondProviderResponse) Reset() {
	*x = MsgBondProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arkeo_arkeo_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBondProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBondProviderResponse) ProtoMessage() {}

// Deprecated: Use MsgBondProviderResponse.ProtoReflect.Descriptor instead.
func (*MsgBondProviderResponse) Descriptor() ([]byte, []int) {
	return file_arkeo_arkeo_tx_proto_rawDescGZIP(), []int{1}
}

type MsgModProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator             string          `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Provider            []byte          `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	Service             string          `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	MetadataUri         string          `protobuf:"bytes,4,opt,name=metadata_uri,json=metadataUri,proto3" json:"metadata_uri,omitempty"`
	MetadataNonce       uint64          `protobuf:"varint,5,opt,name=metadata_nonce,json=metadataNonce,proto3" json:"metadata_nonce,omitempty"`
	Status              ProviderStatus  `protobuf:"varint,6,opt,name=status,proto3,enum=arkeo.arkeo.ProviderStatus" json:"status,omitempty"`
	MinContractDuration int64           `protobuf:"varint,7,opt,name=min_contract_duration,json=minContractDuration,proto3" json:"min_contract_duration,omitempty"`
	MaxContractDuration int64           `protobuf:"varint,8,opt,name=max_contract_duration,json=maxContractDuration,proto3" json:"max_contract_duration,omitempty"`
	SubscriptionRate    []*v1beta1.Coin `protobuf:"bytes,9,rep,name=subscription_rate,json=subscriptionRate,proto3" json:"subscription_rate,omitempty"`
	PayAsYouGoRate      []*v1beta1.Coin `protobuf:"bytes,10,rep,name=pay_as_you_go_rate,json=payAsYouGoRate,proto3" json:"pay_as_you_go_rate,omitempty"`
	SettlementDuration  int64           `protobuf:"varint,11,opt,name=settlement_duration,json=settlementDuration,proto3" json:"settlement_duration,omitempty"`
}

func (x *MsgModProvider) Reset() {
	*x = MsgModProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arkeo_arkeo_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgModProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgModProvider) ProtoMessage() {}

// Deprecated: Use MsgModProvider.ProtoReflect.Descriptor instead.
func (*MsgModProvider) Descriptor() ([]byte, []int) {
	return file_arkeo_arkeo_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgModProvider) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgModProvider) GetProvider() []byte {
	if x != nil {
		return x.Provider
	}
	return nil
}

func (x *MsgModProvider) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *MsgModProvider) GetMetadataUri() string {
	if x != nil {
		return x.MetadataUri
	}
	return ""
}

func (x *MsgModProvider) GetMetadataNonce() uint64 {
	if x != nil {
		return x.MetadataNonce
	}
	return 0
}

func (x *MsgModProvider) GetStatus() ProviderStatus {
	if x != nil {
		return x.Status
	}
	return ProviderStatus_OFFLINE
}

func (x *MsgModProvider) GetMinContractDuration() int64 {
	if x != nil {
		return x.MinContractDuration
	}
	return 0
}

func (x *MsgModProvider) GetMaxContractDuration() int64 {
	if x != nil {
		return x.MaxContractDuration
	}
	return 0
}

func (x *MsgModProvider) GetSubscriptionRate() []*v1beta1.Coin {
	if x != nil {
		return x.SubscriptionRate
	}
	return nil
}

func (x *MsgModProvider) GetPayAsYouGoRate() []*v1beta1.Coin {
	if x != nil {
		return x.PayAsYouGoRate
	}
	return nil
}

func (x *MsgModProvider) GetSettlementDuration() int64 {
	if x != nil {
		return x.SettlementDuration
	}
	return 0
}

type MsgModProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgModProviderResponse) Reset() {
	*x = MsgModProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arkeo_arkeo_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgModProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgModProviderResponse) ProtoMessage() {}

// Deprecated: Use MsgModProviderResponse.ProtoReflect.Descriptor instead.
func (*MsgModProviderResponse) Descriptor() ([]byte, []int) {
	return file_arkeo_arkeo_tx_proto_rawDescGZIP(), []int{3}
}

type MsgOpenContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator            string                `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Provider           string                `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	Service            string                `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	Client             string                `protobuf:"bytes,4,opt,name=client,proto3" json:"client,omitempty"`
	Delegate           string                `protobuf:"bytes,5,opt,name=delegate,proto3" json:"delegate,omitempty"`
	ContractType       ContractType          `protobuf:"varint,6,opt,name=contract_type,json=contractType,proto3,enum=arkeo.arkeo.ContractType" json:"contract_type,omitempty"`
	Duration           int64                 `protobuf:"varint,7,opt,name=duration,proto3" json:"duration,omitempty"`
	Rate               *v1beta1.Coin         `protobuf:"bytes,8,opt,name=rate,proto3" json:"rate,omitempty"`
	Deposit            string                `protobuf:"bytes,9,opt,name=deposit,proto3" json:"deposit,omitempty"`
	SettlementDuration int64                 `protobuf:"varint,10,opt,name=settlement_duration,json=settlementDuration,proto3" json:"settlement_duration,omitempty"`
	Authorization      ContractAuthorization `protobuf:"varint,11,opt,name=authorization,proto3,enum=arkeo.arkeo.ContractAuthorization" json:"authorization,omitempty"`
	QueriesPerMinute   int64                 `protobuf:"varint,12,opt,name=queries_per_minute,json=queriesPerMinute,proto3" json:"queries_per_minute,omitempty"`
}

func (x *MsgOpenContract) Reset() {
	*x = MsgOpenContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arkeo_arkeo_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgOpenContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgOpenContract) ProtoMessage() {}

// Deprecated: Use MsgOpenContract.ProtoReflect.Descriptor instead.
func (*MsgOpenContract) Descriptor() ([]byte, []int) {
	return file_arkeo_arkeo_tx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgOpenContract) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgOpenContract) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *MsgOpenContract) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *MsgOpenContract) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *MsgOpenContract) GetDelegate() string {
	if x != nil {
		return x.Delegate
	}
	return ""
}

func (x *MsgOpenContract) GetContractType() ContractType {
	if x != nil {
		return x.ContractType
	}
	return ContractType_SUBSCRIPTION
}

func (x *MsgOpenContract) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *MsgOpenContract) GetRate() *v1beta1.Coin {
	if x != nil {
		return x.Rate
	}
	return nil
}

func (x *MsgOpenContract) GetDeposit() string {
	if x != nil {
		return x.Deposit
	}
	return ""
}

func (x *MsgOpenContract) GetSettlementDuration() int64 {
	if x != nil {
		return x.SettlementDuration
	}
	return 0
}

func (x *MsgOpenContract) GetAuthorization() ContractAuthorization {
	if x != nil {
		return x.Authorization
	}
	return ContractAuthorization_STRICT
}

func (x *MsgOpenContract) GetQueriesPerMinute() int64 {
	if x != nil {
		return x.QueriesPerMinute
	}
	return 0
}

type MsgOpenContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgOpenContractResponse) Reset() {
	*x = MsgOpenContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arkeo_arkeo_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgOpenContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgOpenContractResponse) ProtoMessage() {}

// Deprecated: Use MsgOpenContractResponse.ProtoReflect.Descriptor instead.
func (*MsgOpenContractResponse) Descriptor() ([]byte, []int) {
	return file_arkeo_arkeo_tx_proto_rawDescGZIP(), []int{5}
}

type MsgCloseContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ContractId uint64 `protobuf:"varint,2,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	Client     []byte `protobuf:"bytes,3,opt,name=client,proto3" json:"client,omitempty"`
	Delegate   []byte `protobuf:"bytes,4,opt,name=delegate,proto3" json:"delegate,omitempty"`
}

func (x *MsgCloseContract) Reset() {
	*x = MsgCloseContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arkeo_arkeo_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCloseContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCloseContract) ProtoMessage() {}

// Deprecated: Use MsgCloseContract.ProtoReflect.Descriptor instead.
func (*MsgCloseContract) Descriptor() ([]byte, []int) {
	return file_arkeo_arkeo_tx_proto_rawDescGZIP(), []int{6}
}

func (x *MsgCloseContract) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgCloseContract) GetContractId() uint64 {
	if x != nil {
		return x.ContractId
	}
	return 0
}

func (x *MsgCloseContract) GetClient() []byte {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *MsgCloseContract) GetDelegate() []byte {
	if x != nil {
		return x.Delegate
	}
	return nil
}

type MsgCloseContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgCloseContractResponse) Reset() {
	*x = MsgCloseContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arkeo_arkeo_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCloseContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCloseContractResponse) ProtoMessage() {}

// Deprecated: Use MsgCloseContractResponse.ProtoReflect.Descriptor instead.
func (*MsgCloseContractResponse) Descriptor() ([]byte, []int) {
	return file_arkeo_arkeo_tx_proto_rawDescGZIP(), []int{7}
}

type MsgClaimContractIncome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator            string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ContractId         uint64 `protobuf:"varint,2,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	Signature          []byte `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	Nonce              int64  `protobuf:"varint,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ChainId            string `protobuf:"bytes,6,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	SignatureExpiresAt int64  `protobuf:"varint,7,opt,name=signature_expires_at,json=signatureExpiresAt,proto3" json:"signature_expires_at,omitempty"`
}

func (x *MsgClaimContractIncome) Reset() {
	*x = MsgClaimContractIncome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arkeo_arkeo_tx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgClaimContractIncome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgClaimContractIncome) ProtoMessage() {}

// Deprecated: Use MsgClaimContractIncome.ProtoReflect.Descriptor instead.
func (*MsgClaimContractIncome) Descriptor() ([]byte, []int) {
	return file_arkeo_arkeo_tx_proto_rawDescGZIP(), []int{8}
}

func (x *MsgClaimContractIncome) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgClaimContractIncome) GetContractId() uint64 {
	if x != nil {
		return x.ContractId
	}
	return 0
}

func (x *MsgClaimContractIncome) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *MsgClaimContractIncome) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *MsgClaimContractIncome) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *MsgClaimContractIncome) GetSignatureExpiresAt() int64 {
	if x != nil {
		return x.SignatureExpiresAt
	}
	return 0
}

type MsgClaimContractIncomeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgClaimContractIncomeResponse) Reset() {
	*x = MsgClaimContractIncomeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arkeo_arkeo_tx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgClaimContractIncomeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgClaimContractIncomeResponse) ProtoMessage() {}

// Deprecated: Use MsgClaimContractIncomeResponse.ProtoReflect.Descriptor instead.
func (*MsgClaimContractIncomeResponse) Descriptor() ([]byte, []int) {
	return file_arkeo_arkeo_tx_proto_rawDescGZIP(), []int{9}
}

// this line is used by starport scaffolding # proto/tx/message
type MsgSetVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Version int64  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *MsgSetVersion) Reset() {
	*x = MsgSetVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arkeo_arkeo_tx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSetVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetVersion) ProtoMessage() {}

// Deprecated: Use MsgSetVersion.ProtoReflect.Descriptor instead.
func (*MsgSetVersion) Descriptor() ([]byte, []int) {
	return file_arkeo_arkeo_tx_proto_rawDescGZIP(), []int{10}
}

func (x *MsgSetVersion) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgSetVersion) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type MsgSetVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgSetVersionResponse) Reset() {
	*x = MsgSetVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arkeo_arkeo_tx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgSetVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgSetVersionResponse) ProtoMessage() {}

// Deprecated: Use MsgSetVersionResponse.ProtoReflect.Descriptor instead.
func (*MsgSetVersionResponse) Descriptor() ([]byte, []int) {
	return file_arkeo_arkeo_tx_proto_rawDescGZIP(), []int{11}
}

var File_arkeo_arkeo_tx_proto protoreflect.FileDescriptor

var file_arkeo_arkeo_tx_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2f, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2f, 0x74, 0x78,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x61, 0x72,
	0x6b, 0x65, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2f, 0x61, 0x72, 0x6b, 0x65,
	0x6f, 0x2f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x73,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x61,
	0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xec, 0x01, 0x0a, 0x0f, 0x4d,
	0x73, 0x67, 0x42, 0x6f, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x32,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x62, 0x6f, 0x6e, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2b, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74,
	0x68, 0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x49, 0x6e, 0x74, 0x52, 0x04, 0x62, 0x6f, 0x6e, 0x64, 0x3a, 0x2e, 0x82, 0xe7, 0xb0, 0x2a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x1d, 0x61, 0x72, 0x6b, 0x65,
	0x6f, 0x2f, 0x78, 0x2f, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2f, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x6e,
	0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x19, 0x0a, 0x17, 0x4d, 0x73, 0x67,
	0x42, 0x6f, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8d, 0x05, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x4d, 0x6f, 0x64, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x2f, 0xfa,
	0xde, 0x1f, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72,
	0x6b, 0x65, 0x6f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x72, 0x6b, 0x65, 0x6f,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x75,
	0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x55, 0x72, 0x69, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x61,
	0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x32, 0x0a, 0x15, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x13, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x11, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42,
	0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x10, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x4b, 0x0a, 0x12, 0x70, 0x61, 0x79, 0x5f, 0x61,
	0x73, 0x5f, 0x79, 0x6f, 0x75, 0x5f, 0x67, 0x6f, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x04,
	0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x41, 0x73, 0x59, 0x6f, 0x75, 0x47, 0x6f,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x12, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x2d, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x1c, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2f, 0x78, 0x2f,
	0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2f, 0x4d, 0x73, 0x67, 0x4d, 0x6f, 0x64, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x22, 0x18, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x4d, 0x6f, 0x64, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe0,
	0x04, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x12, 0x3e, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2e,
	0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x04,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x04, 0x72, 0x61, 0x74,
	0x65, 0x12, 0x45, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x2b, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e,
	0x74, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x52,
	0x07, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0d, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x22, 0x2e, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x50, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x3a, 0x2e, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x8a,
	0xe7, 0xb0, 0x2a, 0x1d, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2f, 0x78, 0x2f, 0x61, 0x72, 0x6b, 0x65,
	0x6f, 0x2f, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x22, 0x19, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xae, 0x02, 0x0a,
	0x10, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x2f, 0xfa, 0xde, 0x1f, 0x2b, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x4b, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x42, 0x2f, 0xfa, 0xde, 0x1f, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61,
	0x72, 0x6b, 0x65, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x75, 0x62, 0x4b,
	0x65, 0x79, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x3a, 0x2f, 0x82, 0xe7,
	0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x1e, 0x61,
	0x72, 0x6b, 0x65, 0x6f, 0x2f, 0x78, 0x2f, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2f, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22, 0x1a, 0x0a,
	0x18, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa5, 0x02, 0x0a, 0x16, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x6e,
	0x63, 0x6f, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x3a, 0x35, 0x82, 0xe7, 0xb0, 0x2a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x24, 0x61, 0x72, 0x6b,
	0x65, 0x6f, 0x2f, 0x78, 0x2f, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2f, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d,
	0x65, 0x22, 0x20, 0x0a, 0x1e, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x0d, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x3a, 0x2c, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x1b, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2f, 0x78, 0x2f, 0x61, 0x72,
	0x6b, 0x65, 0x6f, 0x2f, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x17, 0x0a, 0x15, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x93, 0x04, 0x0a, 0x03, 0x4d,
	0x73, 0x67, 0x12, 0x52, 0x0a, 0x0c, 0x42, 0x6f, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x12, 0x1c, 0x2e, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x61, 0x72, 0x6b, 0x65, 0x6f,
	0x2e, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x1a, 0x24, 0x2e, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x4d,
	0x73, 0x67, 0x42, 0x6f, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x61, 0x72,
	0x6b, 0x65, 0x6f, 0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x6f, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x1a, 0x23, 0x2e, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x61, 0x72, 0x6b, 0x65, 0x6f,
	0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x6f, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1c, 0x2e, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2e,
	0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x61, 0x72,
	0x6b, 0x65, 0x6f, 0x2e, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0d, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1d, 0x2e, 0x61,
	0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x72,
	0x6b, 0x65, 0x6f, 0x2e, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x67, 0x0a, 0x13, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x72, 0x6b, 0x65,
	0x6f, 0x2e, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x1a, 0x2b,
	0x2e, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x63,
	0x6f, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0a, 0x53,
	0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x61, 0x72, 0x6b, 0x65,
	0x6f, 0x2e, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x22, 0x2e, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x61, 0x72,
	0x6b, 0x65, 0x6f, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x05, 0x80, 0xe7, 0xb0, 0x2a, 0x01,
	0x42, 0x85, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x61,
	0x72, 0x6b, 0x65, 0x6f, 0x42, 0x07, 0x54, 0x78, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x1c, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0x2f, 0x61, 0x72, 0x6b, 0x65, 0x6f, 0xa2, 0x02, 0x03,
	0x41, 0x41, 0x58, 0xaa, 0x02, 0x0b, 0x41, 0x72, 0x6b, 0x65, 0x6f, 0x2e, 0x41, 0x72, 0x6b, 0x65,
	0x6f, 0xca, 0x02, 0x0b, 0x41, 0x72, 0x6b, 0x65, 0x6f, 0x5c, 0x41, 0x72, 0x6b, 0x65, 0x6f, 0xe2,
	0x02, 0x17, 0x41, 0x72, 0x6b, 0x65, 0x6f, 0x5c, 0x41, 0x72, 0x6b, 0x65, 0x6f, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0c, 0x41, 0x72, 0x6b, 0x65,
	0x6f, 0x3a, 0x3a, 0x41, 0x72, 0x6b, 0x65, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_arkeo_arkeo_tx_proto_rawDescOnce sync.Once
	file_arkeo_arkeo_tx_proto_rawDescData = file_arkeo_arkeo_tx_proto_rawDesc
)

func file_arkeo_arkeo_tx_proto_rawDescGZIP() []byte {
	file_arkeo_arkeo_tx_proto_rawDescOnce.Do(func() {
		file_arkeo_arkeo_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_arkeo_arkeo_tx_proto_rawDescData)
	})
	return file_arkeo_arkeo_tx_proto_rawDescData
}

var file_arkeo_arkeo_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_arkeo_arkeo_tx_proto_goTypes = []interface{}{
	(*MsgBondProvider)(nil),                // 0: arkeo.arkeo.MsgBondProvider
	(*MsgBondProviderResponse)(nil),        // 1: arkeo.arkeo.MsgBondProviderResponse
	(*MsgModProvider)(nil),                 // 2: arkeo.arkeo.MsgModProvider
	(*MsgModProviderResponse)(nil),         // 3: arkeo.arkeo.MsgModProviderResponse
	(*MsgOpenContract)(nil),                // 4: arkeo.arkeo.MsgOpenContract
	(*MsgOpenContractResponse)(nil),        // 5: arkeo.arkeo.MsgOpenContractResponse
	(*MsgCloseContract)(nil),               // 6: arkeo.arkeo.MsgCloseContract
	(*MsgCloseContractResponse)(nil),       // 7: arkeo.arkeo.MsgCloseContractResponse
	(*MsgClaimContractIncome)(nil),         // 8: arkeo.arkeo.MsgClaimContractIncome
	(*MsgClaimContractIncomeResponse)(nil), // 9: arkeo.arkeo.MsgClaimContractIncomeResponse
	(*MsgSetVersion)(nil),                  // 10: arkeo.arkeo.MsgSetVersion
	(*MsgSetVersionResponse)(nil),          // 11: arkeo.arkeo.MsgSetVersionResponse
	(ProviderStatus)(0),                    // 12: arkeo.arkeo.ProviderStatus
	(*v1beta1.Coin)(nil),                   // 13: cosmos.base.v1beta1.Coin
	(ContractType)(0),                      // 14: arkeo.arkeo.ContractType
	(ContractAuthorization)(0),             // 15: arkeo.arkeo.ContractAuthorization
}
var file_arkeo_arkeo_tx_proto_depIdxs = []int32{
	12, // 0: arkeo.arkeo.MsgModProvider.status:type_name -> arkeo.arkeo.ProviderStatus
	13, // 1: arkeo.arkeo.MsgModProvider.subscription_rate:type_name -> cosmos.base.v1beta1.Coin
	13, // 2: arkeo.arkeo.MsgModProvider.pay_as_you_go_rate:type_name -> cosmos.base.v1beta1.Coin
	14, // 3: arkeo.arkeo.MsgOpenContract.contract_type:type_name -> arkeo.arkeo.ContractType
	13, // 4: arkeo.arkeo.MsgOpenContract.rate:type_name -> cosmos.base.v1beta1.Coin
	15, // 5: arkeo.arkeo.MsgOpenContract.authorization:type_name -> arkeo.arkeo.ContractAuthorization
	0,  // 6: arkeo.arkeo.Msg.BondProvider:input_type -> arkeo.arkeo.MsgBondProvider
	2,  // 7: arkeo.arkeo.Msg.ModProvider:input_type -> arkeo.arkeo.MsgModProvider
	4,  // 8: arkeo.arkeo.Msg.OpenContract:input_type -> arkeo.arkeo.MsgOpenContract
	6,  // 9: arkeo.arkeo.Msg.CloseContract:input_type -> arkeo.arkeo.MsgCloseContract
	8,  // 10: arkeo.arkeo.Msg.ClaimContractIncome:input_type -> arkeo.arkeo.MsgClaimContractIncome
	10, // 11: arkeo.arkeo.Msg.SetVersion:input_type -> arkeo.arkeo.MsgSetVersion
	1,  // 12: arkeo.arkeo.Msg.BondProvider:output_type -> arkeo.arkeo.MsgBondProviderResponse
	3,  // 13: arkeo.arkeo.Msg.ModProvider:output_type -> arkeo.arkeo.MsgModProviderResponse
	5,  // 14: arkeo.arkeo.Msg.OpenContract:output_type -> arkeo.arkeo.MsgOpenContractResponse
	7,  // 15: arkeo.arkeo.Msg.CloseContract:output_type -> arkeo.arkeo.MsgCloseContractResponse
	9,  // 16: arkeo.arkeo.Msg.ClaimContractIncome:output_type -> arkeo.arkeo.MsgClaimContractIncomeResponse
	11, // 17: arkeo.arkeo.Msg.SetVersion:output_type -> arkeo.arkeo.MsgSetVersionResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_arkeo_arkeo_tx_proto_init() }
func file_arkeo_arkeo_tx_proto_init() {
	if File_arkeo_arkeo_tx_proto != nil {
		return
	}
	file_arkeo_arkeo_keeper_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_arkeo_arkeo_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBondProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arkeo_arkeo_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBondProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arkeo_arkeo_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgModProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arkeo_arkeo_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgModProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arkeo_arkeo_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgOpenContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arkeo_arkeo_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgOpenContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arkeo_arkeo_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCloseContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arkeo_arkeo_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCloseContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arkeo_arkeo_tx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgClaimContractIncome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arkeo_arkeo_tx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgClaimContractIncomeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arkeo_arkeo_tx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSetVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arkeo_arkeo_tx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgSetVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_arkeo_arkeo_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_arkeo_arkeo_tx_proto_goTypes,
		DependencyIndexes: file_arkeo_arkeo_tx_proto_depIdxs,
		MessageInfos:      file_arkeo_arkeo_tx_proto_msgTypes,
	}.Build()
	File_arkeo_arkeo_tx_proto = out.File
	file_arkeo_arkeo_tx_proto_rawDesc = nil
	file_arkeo_arkeo_tx_proto_goTypes = nil
	file_arkeo_arkeo_tx_proto_depIdxs = nil
}
