syntax = "proto3";
package arkeo.arkeo;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "arkeo/arkeo/keeper.proto";

option go_package = "github.com/arkeonetwork/arkeo/x/arkeo/types";

// EventBondProvider is emitted when a provider bonds tokens to their service.
message EventBondProvider {
  bytes provider = 1
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  string service = 2;
  string bond_rel = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  string bond_abs = 4 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

// EventModProvider is emitted when a provider's metadata or status is modified.
message EventModProvider {
  bytes creator = 1 [ (gogoproto.casttype) =
                          "github.com/cosmos/cosmos-sdk/types.AccAddress" ];
  bytes provider = 2
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  string service = 3;
  string metadata_uri = 4;
  uint64 metadata_nonce = 5;
  ProviderStatus status = 6;
  int64 min_contract_duration = 7;
  int64 max_contract_duration = 8;
  repeated cosmos.base.v1beta1.Coin subscription_rate = 9
      [ (gogoproto.nullable) = false ];
  repeated cosmos.base.v1beta1.Coin pay_as_you_go_rate = 10
      [ (gogoproto.nullable) = false ];
  string bond = 11 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  int64 settlement_duration = 12;
}

// EventOpenContract is emitted when a contract is opened on chain.
message EventOpenContract {
  bytes provider = 1
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  uint64 contract_id = 2;
  string service = 3;
  bytes client = 4
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  bytes delegate = 5
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  ContractType type = 6;
  int64 height = 7;
  int64 duration = 8;
  cosmos.base.v1beta1.Coin rate = 9 [ (gogoproto.nullable) = false ];
  int64 open_cost = 10;
  string deposit = 11 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  int64 settlement_duration = 12;
  ContractAuthorization authorization = 13;
  int64 queries_per_minute = 14;
  int64 settlement_height = 15;
}

// EventSettleContract is emitted when a contract is settled.
message EventSettleContract {
  bytes provider = 1
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  uint64 contract_id = 2;
  string service = 3;
  bytes client = 4
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  bytes delegate = 5
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  ContractType type = 6;
  int64 nonce = 7;
  int64 height = 8;
  string paid = 9 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  string reserve = 10 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

// EventCloseContract is emitted when a contract is closed or expires.
message EventCloseContract {
  uint64 contract_id = 1;
  bytes provider = 2
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  string service = 3;
  bytes client = 4
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  bytes delegate = 5
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
}

// EventValidatorPayout is emitted when a validator receives a payout.
message EventValidatorPayout {
  bytes validator = 1 [ (gogoproto.casttype) =
                            "github.com/cosmos/cosmos-sdk/types.AccAddress" ];
  string reward = 2 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}
